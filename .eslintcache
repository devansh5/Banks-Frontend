[{"E:\\Banks-Frontend\\banks-frontend\\src\\index.js":"1","E:\\Banks-Frontend\\banks-frontend\\src\\App.js":"2","E:\\Banks-Frontend\\banks-frontend\\src\\reportWebVitals.js":"3","E:\\Banks-Frontend\\banks-frontend\\src\\Components\\TableData\\TableData.jsx":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":220,"mtime":1611548224830,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":6463,"mtime":1611554484278,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"14eykyt",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},"E:\\Banks-Frontend\\banks-frontend\\src\\index.js",[],"E:\\Banks-Frontend\\banks-frontend\\src\\App.js",[],"E:\\Banks-Frontend\\banks-frontend\\src\\reportWebVitals.js",[],"E:\\Banks-Frontend\\banks-frontend\\src\\Components\\TableData\\TableData.jsx",["19","20","21","22"],"import React, { useState, useEffect, useRef } from 'react';\r\nimport { throttle } from 'lodash';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport axios from 'axios';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nconst columns = [\r\n    { id: 'bank', label: 'BankId',align: 'center', },\r\n    { id: 'ifsc', label: 'IFSC Code',align: 'center', },\r\n    {\r\n        id: 'branch',\r\n        label: 'Branch',\r\n        minWidth: 170,\r\n        align: 'center',\r\n    },\r\n    {\r\n        id: 'address',\r\n        label: 'Address',\r\n        minWidth: 170,\r\n        align: 'center',\r\n    },\r\n    {\r\n        id: 'city',\r\n        label: 'City',\r\n        minWidth: 170,\r\n        align: 'center',\r\n    },\r\n    {\r\n        id: 'district',\r\n        label: 'district',\r\n        minWidth: 170,\r\n        align: 'center',\r\n    },\r\n    {\r\n        id: 'state',\r\n        label: 'state',\r\n        minWidth: 170,\r\n        align: 'center',\r\n    },\r\n];\r\n\r\nconst cities = [\r\n    {\r\n        value: 'banglore',\r\n        label: 'banglore',\r\n    },\r\n    {\r\n        value: 'mumbai',\r\n        label: 'mumbai',\r\n    },\r\n    {\r\n        value: 'Delhi',\r\n        label: 'Delhi',\r\n    },\r\n];\r\n\r\n\r\n\r\n\r\nexport default function TableData() {\r\n    const classes = useStyles();\r\n    const [page, setPage] = useState(0);\r\n    const [rowsPerPage, setRowsPerPage] = useState(10);\r\n    const [city, setCity] = useState('');\r\n    const [search, setsearch] = useState('')\r\n    const [rows, setrows] = useState([])\r\n\r\n    console.log(rows)\r\n\r\n    useEffect(() => {\r\n        getAllData()\r\n        throttled.current(search)\r\n    },[search])\r\n\r\n    const throttled = useRef(throttle((newValue) => console.log(newValue), 1000))\r\n\r\n    const getAllData = () => {\r\n        console.log(search)\r\n        axios.get(`https://bankserver.herokuapp.com/api/branches/autocomplete?q=${search}`).then((res) => {\r\n            setrows(res.data.results)\r\n        })\r\n    }\r\n\r\n\r\n\r\n    const handleChange = (event) => {\r\n        setCity(event.target.value);\r\n    };\r\n\r\n    const handleSearch = (e)=>{\r\n        setsearch(e.target.value)\r\n    }\r\n\r\n    const handleChangePage = (event, newPage) => {\r\n        setPage(newPage);\r\n    };\r\n\r\n    const handleChangeRowsPerPage = (event) => {\r\n        setRowsPerPage(+event.target.value);\r\n        setPage(0);\r\n    };\r\n\r\n\r\n    return (\r\n        <Paper className={classes.root}>\r\n            <div className={classes.searchBar} >\r\n                <TextField\r\n                    id=\"standard-select-currency\"\r\n                    select\r\n                    label=\"Bank\"\r\n                    value={city}\r\n                    onChange={handleChange}\r\n                    variant=\"outlined\"\r\n                    helperText=\"Please select your bank city\"\r\n                >\r\n                    {cities.map((option) => (\r\n                        <MenuItem key={option.value} value={option.value}>\r\n                            {option.label}\r\n                        </MenuItem>\r\n                    ))}\r\n                </TextField>\r\n                <TextField id=\"standard-basic\" onChange={handleSearch} label=\"Search\" />\r\n\r\n            </div>\r\n            <TableContainer className={classes.container}>\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell align='center' >\r\n                                S.No.\r\n                            </TableCell>\r\n                            {columns.map((column) => (\r\n                                <TableCell\r\n                                    key={column.id}\r\n                                    align={column.align}\r\n                                    style={{ minWidth: column.minWidth }}\r\n                                >\r\n                                    {column.label}\r\n                                </TableCell>\r\n                            ))}\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                      {rows?.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row,index) => {\r\n                            return (\r\n                                <TableRow hover role=\"checkbox\" tabIndex={-1} key={index+1}>\r\n                                    <TableCell key={index+1} align='center' >\r\n                                        {index+1}\r\n                                    </TableCell>\r\n                                    {columns.map((column) => {\r\n                                        const value = row[column.id];\r\n                                        return (\r\n                                            <TableCell key={column.id} align={column.align}>\r\n                                                {column.format && typeof value === 'number' ? column.format(value) : value}\r\n                                            </TableCell>\r\n                                        );\r\n                                    })}\r\n                                </TableRow>\r\n                            );\r\n                        })}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            <TablePagination\r\n                rowsPerPageOptions={[10, 25, 50, 100]}\r\n                component=\"div\"\r\n                count={rows.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n            />\r\n        </Paper>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    container: {\r\n        maxHeight: 440,\r\n    },\r\n    searchBar: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        padding: 20\r\n    }\r\n});\r\n",{"ruleId":"23","severity":1,"message":"24","line":13,"column":8,"nodeType":"25","messageId":"26","endLine":13,"endColumn":14},{"ruleId":"23","severity":1,"message":"27","line":15,"column":8,"nodeType":"25","messageId":"26","endLine":15,"endColumn":24},{"ruleId":"23","severity":1,"message":"28","line":16,"column":8,"nodeType":"25","messageId":"26","endLine":16,"endColumn":12},{"ruleId":"29","severity":1,"message":"30","line":85,"column":7,"nodeType":"31","endLine":85,"endColumn":15,"suggestions":"32"},"no-unused-vars","'Button' is defined but never used.","Identifier","unusedVar","'CircularProgress' is defined but never used.","'Menu' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getAllData'. Either include it or remove the dependency array.","ArrayExpression",["33"],{"desc":"34","fix":"35"},"Update the dependencies array to be: [getAllData, search]",{"range":"36","text":"37"},[2242,2250],"[getAllData, search]"]